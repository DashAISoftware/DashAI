{
  "api": [
    {
      "id": 1
    }
  ],
  "dataset": [
    {
      "id": 1,
      "name": "Dataset A",
      "task_name": "TabularClassificationTask",
      "created": "2023-04-11T14:30:00",
      "last_modified": "2023-04-11T14:30:00",
      "file_path": "/path/to/dataset_A.csv"
    },
    {
      "id": 2,
      "name": "Dataset B",
      "task_name": "TabularClassificationTask",
      "created": "2023-04-11T14:31:00",
      "last_modified": "2023-04-11T14:31:00",
      "file_path": "/path/to/dataset_B.csv"
    },
    {
      "id": 3,
      "name": "Dataset C",
      "task_name": "TabularClassificationTask",
      "created": "2023-04-11T14:31:00",
      "last_modified": "2023-04-11T14:31:00",
      "file_path": "/path/to/dataset_C.csv"
    },
    {
      "id": 4,
      "name": "Dataset D",
      "task_name": "TextClassificationTask",
      "created": "2023-04-11T14:31:00",
      "last_modified": "2023-04-11T14:31:00",
      "file_path": "/path/to/dataset_D.csv"
    }
  ],
  "task": [
    {
      "class": "TabularClassificationTask",
      "name": "Tabular Classification",
      "help": "Classify data with Tabular features by categories.",
      "description": "Classify data with Tabular features by categories.",
      "type": "object"
    },
    {
      "class": "TextClassificationTask",
      "name": "Text Classification",
      "help": "Classify data with text features by categories.",
      "description": "Classify data with text features by categories.",
      "type": "object"
    },
    {
      "class": "TranslationTask",
      "name": "Translation",
      "help": "Translate text training a AI model.",
      "description": "Translate text training a AI model.",
      "type": "object"
    }
  ],
  "TabularClassificationTask": [
    {
      "class": "CSVDataLoader",
      "name": "CSV Data",
      "help": "Use CSV files to upload the data. You can use a .csv file or multiple .csv files in a .zip file.",
      "description": "You can upload your data in a .csv file or in multiple .csv files in a .zip, where you can have the definition of splits in folders as shown above. \n If you only have one file or multiple files without the folder definition for the splits, you can set them up later. \n Make sure that all the CSV files have the same features.",
      "images": [
        "/info_images/csv_files.png"
      ],
      "type": "object"
    },
    {
      "class": "JSONDataLoader",
      "name": "JSON Data",
      "help": "Use JSON files to upload the data. You can use a .json file or multiple .json files in a .zip file.",
      "description": "You can upload your data in a .json file or in multiple .json files in a .zip, where you can have the definition of splits in folders as shown above. \n If you only have one file or multiple files without the folder definition for the splits, you can set them up later. \n The JSON files have to follow the format that specify in the last figure, the data have to be in a key, that contains an array with the samples of the data or rows in JSON objects, where each one have the features of data or columns like key/value pairs. \n Make sure that all the JSON files have the same features and format.",
      "images": [
        "/info_images/json_files.png",
        "/info_images/json_format.svg"
      ],
      "type": "object"
    }
  ],
  "CSVDataLoader": {
    "additionalProperties": true,
    "error_msg": "You must specify the data configuration parameters.",
    "description": "Upload a .csv file with your dataset or a .zip file with CSV files to be uploaded.",
    "display": "modal",
    "properties": {
      "name": {
        "oneOf": [
          {
            "error_msg": "",
            "description": "<p style='font-size: 15px;'>Dataset name</p><p style='font-size: 12px;'>If left <b>blank</b>, the name of the uploaded file will be used.<p/><a style='color: #ADD8E6;' href='https://github.com/DashAISoftware/DashAI'>More info.</a>",
            "type": "text",
            "default": "",
            "optional": null
          }
        ]
      },
      "separator": {
        "oneOf": [
          {
            "error_msg": "A separator character must be indicated for the data.",
            "description": "A separator character delimits the data in a CSV file.",
            "type": "string",
            "default": "Comma (,)",
            "enum": [
              "Comma (,)",
              "Semicolon (;)",
              "Space",
              "Tabulation"
            ]
          }
        ]
      },
      "outputs_columns": {
        "oneOf": [
          {
            "error_msg": "Need to specify the names of the columns that defines the outputs columns of the data.",
            "description": "You must specify which columns will be the output according to the task. By default the last column is selected.",
            "type": "list_of_strings",
            "default": []
          }
        ]
      },
      "splits_in_folders": {
        "oneOf": [
          {
            "error_msg": "Need to select 'true' if you have folders that define the splits, otherwise 'false'.",
            "description": "If your data has folders that define the splits select 'true', otherwise 'false'.",
            "type": "boolean",
            "default": false
          }
        ]
      }
    },
    "splits": {
      "display": "div",
      "properties": {
        "train_size": {
          "oneOf": [
            {
              "error_msg": "The size of the training set must be between 0 and 1.",
              "description": "The training set contains the data to be used for training a model. Must be defined between 0 and 100% of the data.",
              "type": "float",
              "default": 0.7,
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "test_size": {
          "oneOf": [
            {
              "error_msg": "The test set size must be between 0 and 1.",
              "description": "The test set contains the data that will be used to evaluate a model. Must be defined between 0 and 100% of the data.",
              "type": "float",
              "default": 0.2,
              "minimum": 0,
              "maximum": 1
            }
          ]
        },
        "val_size": {
          "oneOf": [
            {
              "error_msg": "The validation set size must be between 0 and 1.",
              "description": "The validation set contains the data to be used to validate a model. Must be defined between 0 and 100% of the data.",
              "type": "float",
              "default": 0.1,
              "minimum": 0,
              "maximum": 1
            }
          ]
        }
      },
      "more_options": {
        "display": "modal",
        "properties": {
          "shuffle": {
            "oneOf": [
              {
                "error_msg": "Must be true or false, choose if you want to shuffle the data when separating the sets.",
                "description": "Determines whether the data will be shuffle when defining the sets or not. It must be true for shuffle the data, otherwise false.",
                "type": "boolean",
                "default": true
              }
            ]
          },
          "seed": {
            "oneOf": [
              {
                "error_msg": "Must be an integer greater than or equal to 0.",
                "description": "A seed defines a value with which the same mixture of data will always be obtained. It must be an integer greater than or equal to 0.",
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            ]
          },
          "stratify": {
            "oneOf": [
              {
                "error_msg": "Must be true or false, choose if you want to separate the data into sets with the same proportion of samples per class as the original set or not.",
                "description": "Defines whether the data will be proportionally separated according to the distribution of classes in each set.",
                "type": "boolean",
                "default": false
              }
            ]
          }
        },
        "type": "object"
      },
      "type": "object"
    },
    "type": "object"
  },
  "experiment": [
    {
      "id": 1,
      "dataset_id": 1,
      "name": "Experiment A",
      "task_name": "Task A",
      "step": "MODEL_CONFIGURATION",
      "created": "2023-04-11T14:32:00",
      "last_modified": "2023-04-11T14:32:00"
    },
    {
      "id": 2,
      "dataset_id": 1,
      "name": "Experiment 2",
      "task_name": "Task A",
      "step": "EXECUTION",
      "created": "2023-04-11T14:33:00",
      "last_modified": "2023-04-11T14:33:00"
    },
    {
      "id": 3,
      "dataset_id": 2,
      "name": "Experiment c",
      "task_name": "Task B",
      "step": "COMPLETED",
      "created": "2023-04-11T14:34:00",
      "last_modified": "2023-04-11T14:34:00"
    }
  ],
  "run": [
    {
      "id": 0,
      "experiment_id": 1,
      "created": "2022-04-10T10:00:00",
      "last_modified": "2022-04-10T10:00:00",
      "model_name": "Model 1",
      "parameters": {},
      "train_metrics": {},
      "test_metrics": {},
      "validation_metrics": {},
      "artifacts": {},
      "run_name": "Run 1",
      "run_description": "Description of Run 1",
      "status": "NOT_STARTED",
      "start_time": "2022-04-10T10:00:00",
      "end_time": null
    },
    {
      "id": 1,
      "experiment_id": 1,
      "created": "2022-04-10T10:00:00",
      "last_modified": "2022-04-10T10:00:00",
      "model_name": "Model 1",
      "parameters": {
        "param1": 0.5,
        "param2": "value"
      },
      "train_metrics": {},
      "test_metrics": {},
      "validation_metrics": {},
      "artifacts": {},
      "run_name": "Run 1",
      "run_description": "Description of Run 1",
      "status": "NOT_STARTED",
      "start_time": "2022-04-10T10:00:00",
      "end_time": null
    },
    {
      "id": 2,
      "experiment_id": 2,
      "created": "2022-04-11T10:00:00",
      "last_modified": "2022-04-11T10:00:00",
      "model_name": "Model 2",
      "parameters": {
        "param1": 0.6,
        "param2": "value2"
      },
      "train_metrics": {},
      "test_metrics": {},
      "validation_metrics": {},
      "artifacts": {},
      "run_name": "Run 2",
      "run_description": "Description of Run 2",
      "status": "STARTED",
      "start_time": "2022-04-11T10:00:00",
      "end_time": null
    },
    {
      "id": 3,
      "experiment_id": 3,
      "created": "2022-04-10T12:00:00",
      "last_modified": "2022-04-10T12:00:00",
      "model_name": "Model 3",
      "parameters": {
        "param1": 0.7,
        "param2": "value3"
      },
      "train_metrics": {
        "accuracy": 0.75,
        "loss": 0.12
      },
      "test_metrics": {
        "accuracy": 0.68,
        "loss": 0.2
      },
      "validation_metrics": {
        "accuracy": 0.72,
        "loss": 0.15
      },
      "artifacts": {
        "model": "model_3.h5",
        "log": "log_3.txt"
      },
      "run_name": "Run 3",
      "run_description": "Description of Run 3",
      "status": "FINISHED",
      "start_time": "2022-04-10T12:00:00",
      "end_time": "2022-04-10T13:00:00"
    },
    {
      "id": 4,
      "experiment_id": 3,
      "created": "2022-01-03T10:00:00",
      "last_modified": "2022-01-03T11:00:00",
      "model_name": "ResNet50",
      "parameters": {},
      "train_metrics": {},
      "test_metrics": {},
      "validation_metrics": {},
      "artifacts": {},
      "run_name": "resnet50-run1",
      "run_description": "Run with ResNet50 model",
      "status": "ERROR",
      "start_time": "2022-01-03T10:00:00",
      "end_time": "2022-01-03T11:00:00"
    },
    {
      "id": 5,
      "experiment_id": 3,
      "created": "2022-01-05T10:00:00",
      "last_modified": "2022-01-05T11:00:00",
      "model_name": "VGG16",
      "parameters": {
        "batch_size": 32,
        "learning_rate": 0.001
      },
      "train_metrics": {
        "loss": 0.3,
        "accuracy": 0.88
      },
      "test_metrics": {
        "loss": 0.35,
        "accuracy": 0.83
      },
      "validation_metrics": {
        "loss": 0.28,
        "accuracy": 0.86
      },
      "artifacts": {
        "model_file": "vgg16.h5",
        "config_file": "config.json"
      },
      "run_name": "vgg16-run1",
      "run_description": "Run with VGG16 model",
      "status": "FINISHED",
      "start_time": "2022-01-05T10:00:00",
      "end_time": "2022-01-05T11:00:00"
    }
  ]
}