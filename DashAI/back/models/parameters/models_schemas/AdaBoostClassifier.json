{
    "additionalProperties": false,
    "error_msg": "The parameters for AdaBoostClassifier should be one of ['estimator', 'n_estimators', 'learning_rate', 'algorithm', 'random_state'].",
    "description": "An AdaBoost classifier is a meta-estimator that begins by fitting a classifier on the original dataset and then fits additional copies of the classifier on the same dataset but where the weights of incorrectly classified instances are adjusted such that subsequent classifiers focus more on difficult cases. This class implements the algorithm known as AdaBoost-SAMME.",
    "properties": {
      "estimator": {
        "oneOf": [
          {
            "error_msg": "The 'estimator' parameter should be a classifier.",
            "description": "The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper classes_ and n_classes_ attributes. If None, then the base estimator is DecisionTreeClassifier initialized with max_depth=1.",
            "type": ["object", "null"],
            "default": null
          }
        ]
      },
      "n_estimators": {
        "oneOf": [
          {
            "error_msg": "The 'n_estimators' parameter should be an integer greater than or equal than 1.",
            "description": "The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early.",
            "type": "integer",
            "default": 50,
            "minimum": 1
          }
        ]
      },
      "learning_rate": {
        "oneOf": [
          {
            "error_msg": "The 'learning_rate' parameter should be a positive integer.",
            "description": "Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the 'learning_rate' and 'n_estimators' parameters.",
            "type": "float",
            "default": 1.0,
            "minimum": 0.0
          }
        ]
      },
      "algorithm": {
        "oneOf": [
          {
            "error_msg": "The 'algorithm' parameter should be one of 'SAMME', 'SAMME.R'.",
            "description": "If 'SAMME.R' then use the SAMME.R real boosting algorithm. estimator must support calculation of class probabilities. If ‘SAMME’ then use the SAMME discrete boosting algorithm. The SAMME.R algorithm typically converges faster than SAMME, achieving a lower test error with fewer boosting iterations.",
            "type": "string",
            "default": "SAMME.R",
            "enum": ["SAMME", "SAMME.R"]
          }
        ]
      },
      "random_state": {
        "oneOf": [
          {
            "error_msg": "The 'random_state' parameter must be an integer greater than or equal to 0.",
            "description": "The 'random_state' parameter must be an integer greater than or equal to 0.",
            "type": ["integer", "null"],
            "default": null,
            "minimum": 0
          }
        ]
      }
    },
    "type": "object"
  }
  